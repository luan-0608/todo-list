/* ========================================================================== */
/* ===================         TaskCard.css         =================== */
/* ========================================================================== */

/* TaskCard.css - Hand-drawn sketch style */
.task-card {
  position: relative;
  background-color: #fff; /* White paper note */
  border: 2px solid rgba(0, 0, 0, 0.8);
  color: var(--text-main);
  border-radius: 4px 2px 5px 3px / 3px 5px 2px 4px; /* Irregular hand-drawn border */
  padding: 1rem 1.2rem;
  box-shadow: 4px 4px 0px rgba(0, 0, 0, 0.15);
  transition: all 0.2s ease-in-out;
  display: flex;
  flex-direction: column;
  gap: 0.8rem;
  max-width: 400px;
  margin: 0 auto 2rem;
  cursor: grab;
}

.task-card:hover {
  transform: scale(1.03) rotate(1.5deg);
  box-shadow: 6px 6px 0px rgba(0, 0, 0, 0.1);
}

.task-card-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 0.5rem;
}

.task-card-title {
  margin: 0;
  font-size: 1.5rem;
  font-weight: 400; /* Patrick Hand is naturally bold */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  flex-grow: 1;
}

.header-meta {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  flex-shrink: 0;
}

.task-priority-text {
  font-size: 0.8rem;
  padding: 2px 8px;
  border-radius: 8px 5px 9px 6px / 6px 9px 5px 8px;
  border: 1px solid rgba(0,0,0,0.2);
  text-transform: capitalize;
}

.task-priority-text.priority-high {
  background-color: var(--priority-high);
  color: var(--text-main);
}
.task-priority-text.priority-medium {
  background-color: var(--priority-medium);
  color: var(--text-main);
}
.task-priority-text.priority-low {
  background-color: var(--priority-low);
  color: var(--text-main);
}

.task-card-description {
  font-size: 1rem;
  color: var(--text-light);
  margin: 0;
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
  line-height: 1.4;
}

.task-card-description.expanded {
  display: block;
  -webkit-line-clamp: unset;
  overflow: visible;
  white-space: normal; /* Đảm bảo văn bản xuống dòng */
}

.task-card-tags {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.task-card-tag {
  background-color: var(--color-pale-yellow);
  color: var(--text-main);
  padding: 3px 10px;
  border-radius: 12px 10px 14px 9px / 10px 13px 9px 14px;
  font-size: 0.8rem;
  border: 1px solid rgba(0,0,0,0.2);
}

.subtasks-list {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  margin-top: 0.5rem;
  padding-top: 0.5rem;
  border-top: 1px dashed rgba(0,0,0,0.2);
}

.subtasks-list h5 {
  margin: 0 0 0.2rem 0;
  font-size: 0.9rem;
  color: var(--text-light);
  font-weight: 400;
}

.subtask-item {
  display: flex;
  align-items: center;
  gap: 0.8rem; /* Tăng khoảng cách giữa checkbox và label */
  min-height: 24px; /* Đảm bảo mỗi item có chiều cao tối thiểu */
}

.subtask-item input[type="checkbox"] {
  opacity: 0;
  position: absolute;
  width: 1px;
  height: 1px;
}

.subtask-item label {
  position: relative;
  padding-left: 28px;
  cursor: pointer;
  font-size: 1rem;
  color: var(--text-main);
  transition: color 0.2s;
}

.subtask-item label::before {
  content: '';
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  width: 18px;
  height: 18px;
  border: 2px solid rgba(0,0,0,0.7);
  border-radius: 4px 3px 5px 4px / 3px 5px 4px 4px;
  background: #fff;
  transition: all 0.2s;
}

.subtask-item label:hover::before {
  border-color: var(--accent-bright-blue);
}

.subtask-item input[type="checkbox"]:checked + label::before {
  background-color: var(--color-mint-green);
  border-color: var(--color-mint-green);
}

.subtask-item input[type="checkbox"]:checked + label::after {
  content: '✔';
  position: absolute;
  left: 4px;
  top: 50%;
  transform: translateY(-50%) scale(1.2) rotate(-5deg);
  color: var(--text-main);
  font-weight: bold;
}

.subtask-item label.completed {
  text-decoration: line-through;
  color: var(--text-light);
}

.expand-subtasks-btn {
  background: none;
  border: none;
  color: var(--accent-bright-blue);
  cursor: pointer;
  font-size: 0.9rem;
  font-weight: 600;
  padding: 4px 0;
  margin-top: 4px;
  text-decoration: underline;
  text-decoration-style: wavy;
  text-underline-offset: 3px;
  align-self: flex-start; /* Căn nút sang trái */
}


.task-card-footer {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 1rem;
  margin-top: auto;
  padding-top: 0.5rem;
}

.task-card-deadline {
  display: flex;
  align-items: center;
  gap: 6px;
  font-size: 0.9rem;
  color: var(--text-light);
}

.task-card-progress-bar {
  flex-grow: 1;
  height: 8px;
  background-color: rgba(0,0,0,0.05);
  border-radius: 4px;
  border: 1px solid rgba(0,0,0,0.1);
  overflow: hidden;
}

.task-card-progress {
  height: 100%;
  background: var(--color-mint-green);
  border-radius: 3px;
  transition: width 0.5s cubic-bezier(0.25, 1, 0.5, 1);
}

.task-card-actions {
  position: absolute;
  top: 12px;
  right: 12px;
  display: flex;
  gap: 8px;
  opacity: 0;
  transform: translateY(-5px);
  transition: opacity 0.2s ease-in-out, transform 0.2s ease-in-out;
}

.task-card:hover .task-card-actions {
  opacity: 1;
  transform: translateY(0);
}

.action-btn {
  background: rgba(255, 255, 255, 0.7);
  border: 2px solid rgba(0,0,0,0.6);
  border-radius: 50%;
  width: 36px;
  height: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  color: var(--text-main);
  backdrop-filter: blur(2px);
  transition: all 0.2s ease-in-out;
}

.action-btn:hover {
  background: #fff;
  transform: scale(1.1) rotate(-10deg);
}

/* Priority Styles with doodled indicators */
.task-card::before {
  content: '';
  position: absolute;
  top: 10px;
  left: -15px;
  width: 30px;
  height: 30px;
  background-repeat: no-repeat;
  background-size: contain;
  opacity: 0.8;
}

.task-card.priority-high::before {
  /* Hand-drawn star */
  content: '★';
  font-size: 2rem;
  color: var(--accent-bright-red);
  left: -10px;
  top: -5px;
  transform: rotate(-15deg);
}
.task-card.priority-medium::before {
  /* Hand-drawn flag */
  content: '⚑';
  font-size: 1.8rem;
  color: var(--accent-bright-blue);
  left: -10px;
  top: 0px;
}
.task-card.priority-low {
  /* No special indicator, or a very subtle one */
  border-left: 4px dotted var(--color-mint-green);
}

/* Deadline Styles */
.deadline-urgent {
  color: var(--accent-bright-red) !important;
  font-weight: 600;
  background: #ff6b6b20;
  padding: 2px 6px;
  border-radius: 5px;
}

/* Completed State with animated pencil stroke */
.task-card.completed {
  opacity: 0.7;
  background-color: #f5f5f5;
}

.task-card.completed .task-card-title {
  position: relative;
  color: #888;
}

.task-card.completed .task-card-title::after {
  content: '';
  position: absolute;
  left: -2%;
  top: 50%;
  width: 104%;
  height: 3px;
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 10" preserveAspectRatio="none"><path d="M0,5 Q25,-1 50,5 T100,5" stroke="rgba(0,0,0,0.6)" stroke-width="2" fill="none"/></svg>');
  background-repeat: no-repeat;
  background-size: 100% 100%;
  transform: translateY(-50%);
}

.expand-btn {
  background: none;
  border: none;
  color: var(--accent-bright-blue);
  cursor: pointer;
  font-size: 0.9rem;
  font-weight: 600;
  padding: 4px 0;
  margin-top: 4px;
  text-decoration: underline;
  text-decoration-style: wavy;
  text-underline-offset: 3px;
}

.expand-btn.disabled {
  color: var(--text-disabled);
  cursor: not-allowed;
  text-decoration: none;
}

.task-card:active {
  cursor: grabbing;
}

/* Focus Mode with highlight effect */
.task-card.is-unfocused {
  opacity: 0.6;
  filter: saturate(0.5);
  pointer-events: none;
  transition: all 0.3s ease;
}

.task-card.is-focused {
  transform: scale(1.05);
  z-index: 999;
  position: relative;
  box-shadow: 0 0 0 6px var(--color-pale-yellow), 0 0 0 8px rgba(0,0,0,0.8);
}

/* Dark Mode Overrides */
body[data-theme="dark"] .task-card {
  background-color: var(--dark-card-bg);
  border-color: var(--dark-border-color);
  box-shadow: 4px 4px 0px var(--dark-shadow-color);
  transition: all 0.2s ease-in-out, background-color 0.3s ease;
}

body[data-theme="dark"] .task-card:hover {
  transform: scale(1.03) rotate(1.5deg);
  box-shadow: 6px 6px 0px rgba(0, 0, 0, 0.3);
}

body[data-theme="dark"] .task-card-title {
  color: var(--text-main);
}

body[data-theme="dark"] .task-card-description {
  color: var(--text-light);
}

body[data-theme="dark"] .task-priority-text,
body[data-theme="dark"] .task-card-tag {
  color: var(--button-text-color); /* Improved contrast for text on colored backgrounds */
  border-color: rgba(255, 255, 255, 0.3);
}

body[data-theme="dark"] .action-btn {
  background: rgba(70, 70, 70, 0.8);
  border-color: var(--dark-border-color);
  color: var(--text-main);
  backdrop-filter: blur(3px);
}

body[data-theme="dark"] .action-btn:hover {
  background: var(--dark-hover-bg);
  transform: scale(1.1) rotate(-10deg);
}

body[data-theme="dark"] .task-card.completed {
  background-color: rgba(44, 44, 44, 0.8);
  opacity: 0.7;
}

body[data-theme="dark"] .task-card.completed .task-card-title {
  color: var(--text-light);
}

body[data-theme="dark"] .task-card.completed .task-card-title::after {
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 10" preserveAspectRatio="none"><path d="M0,5 Q25,-1 50,5 T100,5" stroke="rgba(255,255,255,0.7)" stroke-width="2" fill="none"/></svg>');
}

body[data-theme="dark"] .task-card-progress-bar {
  background-color: rgba(255, 255, 255, 0.15);
  border-color: rgba(255, 255, 255, 0.25);
}

body[data-theme="dark"] .task-card-progress {
  background-color: var(--color-mint-green);
}

body[data-theme="dark"] .task-card.is-focused {
  box-shadow: 0 0 0 6px var(--color-pale-yellow), 0 0 0 8px rgba(255,255,255,0.8);
}

body[data-theme="dark"] .subtask-item label::before {
  background-color: var(--dark-input-bg);
  border-color: var(--dark-border-color);
}

body[data-theme="dark"] .subtask-item input[type="checkbox"]:checked + label::before {
  background-color: var(--color-mint-green);
  border-color: var(--color-mint-green);
}

body[data-theme="dark"] .subtask-item input[type="checkbox"]:checked + label::after {
  color: var(--button-text-color);
}

body[data-theme="dark"] .expand-btn,
body[data-theme="dark"] .expand-subtasks-btn {
  color: var(--accent-bright-blue);
}

body[data-theme="dark"] .markdown-content code,
body[data-theme="dark"] .markdown-content pre {
  background-color: rgba(255, 255, 255, 0.1);
  color: var(--text-main);
}
/* --- Markdown Content Styling --- */
.markdown-content {
  line-height: 1.5;
  color: var(--text-light);
}

.markdown-content h1,
.markdown-content h2,
.markdown-content h3,
.markdown-content h4 {
  margin-top: 0.8rem;
  margin-bottom: 0.5rem;
  color: var(--text-main);
  font-weight: 600; /* Đậm hơn một chút so với text thường */
}

.markdown-content h1 { font-size: 1.2em; }
.markdown-content h2 { font-size: 1.1em; }
.markdown-content h3 { font-size: 1.05em; }

.markdown-content p {
  margin-bottom: 0.5rem;
}

.markdown-content ul,
.markdown-content ol {
  padding-left: 1.5rem;
  margin-bottom: 0.8rem;
}

.markdown-content li {
  margin-bottom: 0.3rem;
}

.markdown-content strong {
  font-weight: 600;
  color: var(--text-main);
}

.markdown-content a {
  color: var(--accent-bright-blue);
  text-decoration: underline;
}

.markdown-content a:hover {
  color: #0056b3;
}

.markdown-content pre,
.markdown-content code {
  font-family: 'Courier New', Courier, monospace;
  background-color: rgba(0,0,0,0.05);
  padding: 2px 5px;
  border-radius: 4px;
  font-size: 0.9em;
}

.markdown-content pre {
  padding: 0.8rem;
  white-space: pre-wrap;
  word-wrap: break-word;
}
@media (max-width: 768px) {
  .task-card {
    padding: 0.8rem;
    max-width: 100%; /* Ghi đè max-width trên di động */
    margin-bottom: 1.2rem; /* Giảm khoảng cách giữa các card */
    box-shadow: 3px 3px 0px rgba(0, 0, 0, 0.15); /* Giảm đổ bóng */
  }

  .task-card-title {
    font-size: 1.2rem; /* Giảm kích thước font */
  }
  
  /* Giảm khoảng cách các phần tử trong card */
  .task-card {
    gap: 0.6rem;
  }
  
  /* Cải thiện hiển thị của các tag */
  .task-card-tags {
    gap: 0.4rem;
  }
  
  .task-card-tag {
    padding: 2px 8px;
    font-size: 0.75rem;
  }

  /* Điều chỉnh lại các nút hành động cho dễ nhấn */
  .task-card-actions {
    opacity: 1; /* Luôn hiển thị trên điện thoại */
    transform: translateY(0);
    position: relative;
    top: 0;
    right: 0;
    display: flex;
    background-color: rgba(0,0,0,0.02);
    padding: 0.5rem 0.3rem;
    margin: 0.3rem -0.8rem -0.8rem; /* Extend to card edges */
    border-top: 1px dashed rgba(0,0,0,0.1); /* Thêm đường phân cách */
    border-bottom-left-radius: inherit;
    border-bottom-right-radius: inherit;
    justify-content: space-around;
  }

  .task-card:hover .task-card-actions {
    transform: none;
  }

  .action-btn {
    width: 38px;
    height: 38px;
    font-size: 0.9rem;
  }

  /* Vô hiệu hóa hiệu ứng hover trên điện thoại */
  .task-card:hover {
    transform: none;
    box-shadow: 3px 3px 0px rgba(0, 0, 0, 0.15);
  }

  /* Điều chỉnh card khi focus */
  .task-card.is-focused {
    transform: scale(1.02);
  }
  
  /* Cải thiện hiển thị mô tả */
  .task-card-description {
    font-size: 0.95rem;
    -webkit-line-clamp: 2; /* Hiển thị ít dòng hơn */
  }
  
  /* Điều chỉnh footer của card */
  .task-card-footer {
    padding-top: 0.3rem;
  }
}

@media (max-width: 480px) {
  .task-card {
    padding: 0.7rem;
    margin-bottom: 1rem;
  }
  
  .task-card-title {
    font-size: 1.1rem;
  }
  
  .action-btn {
    width: 36px;
    height: 36px;
  }
  
  .task-card-actions {
    padding: 0.4rem 0.2rem;
  }
}

/* ========================================================================== */
/* ===================         TaskForm.css         =================== */
/* ========================================================================== */

/* TaskForm.css - Hand-drawn sketch style */
.task-form {
  display: flex;
  flex-direction: column;
  gap: 1.8rem;
  font-family: 'Patrick Hand', cursive;
}

.task-form h2 {
  margin-top: 0;
  color: var(--text-main);
  font-size: 2rem;
  text-align: center;
  margin-bottom: 1rem;
  font-weight: 400;
  text-decoration: underline;
  text-decoration-style: wavy;
  text-underline-offset: 6px;
  text-decoration-color: var(--color-mint-green);
}

.task-form input,
.task-form textarea {
  width: 100%;
  padding: 0.8rem 1.2rem;
  border: 2px solid rgba(0,0,0,0.7);
  border-radius: 8px 6px 10px 7px / 7px 9px 6px 10px;
  font-size: 1.1rem;
  font-family: 'Patrick Hand', cursive;
  background-color: #fff;
  color: var(--text-main);
  transition: all 0.2s;
  box-shadow: var(--shadow-sketch);
}

.task-form input:focus,
.task-form textarea:focus {
  outline: none;
  border-color: var(--accent-bright-blue);
  box-shadow: 0 0 0 4px var(--color-light-lavender), var(--shadow-sketch);
}

.task-form textarea {
  min-height: 120px;
  resize: vertical;
  line-height: 1.6;
}

body[data-theme="dark"] .task-form input,
body[data-theme="dark"] .task-form textarea {
  background-color: var(--dark-input-bg);
  border-color: var(--dark-border-color);
  color: var(--text-main);
}

.form-actions {
  display: flex;
  justify-content: flex-end;
  gap: 1rem;
}

.form-actions button {
  /* Using the .sketch-btn class from App.css would be ideal, but we can replicate it here */
  padding: 0.7rem 1.5rem;
  border: 2px solid rgba(0,0,0,0.7);
  border-radius: 8px 6px 10px 7px / 7px 9px 6px 10px;
  cursor: pointer;
  font-weight: 400;
  font-size: 1.1rem;
  font-family: 'Patrick Hand', cursive;
  transition: all 0.15s ease;
  box-shadow: var(--shadow-sketch);
}
.form-actions button:hover {
  transform: translate(2px, 2px);
  box-shadow: 1px 1px 0px rgba(0, 0, 0, 0.1);
}
.form-actions button:active {
  transform: translate(3px, 3px);
  box-shadow: none;
}

.form-actions button[type="submit"] {
  background-color: var(--color-mint-green);
  color: var(--text-main);
}

.form-actions button[type="button"] {
  background-color: var(--color-soft-pink);
  color: var(--text-main);
}

.form-row {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1.8rem;
  align-items: start;
}

.form-group {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.form-group label {
  font-weight: 400;
  font-size: 1.2rem;
  color: var(--text-light);
  padding-left: 0.5rem;
}

/* React Datepicker & TagsInput Customization */
.react-datepicker-wrapper,
.react-datepicker__input-container,
.task-form-datepicker {
  width: 100%;
}

.react-tagsinput {
  background-color: #fff;
  border: 2px solid rgba(0,0,0,0.7);
  border-radius: 8px 6px 10px 7px / 7px 9px 6px 10px;
  padding: 0.5rem;
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  transition: all 0.2s;
  box-shadow: var(--shadow-sketch);
}

body[data-theme="dark"] .react-tagsinput {
  background-color: var(--dark-input-bg);
  border-color: var(--dark-border-color);
}

.react-tagsinput--focused {
  border-color: var(--accent-bright-blue);
  box-shadow: 0 0 0 4px var(--color-light-lavender), var(--shadow-sketch);
}

.react-tagsinput-input {
  border: none !important;
  outline: none !important;
  background: transparent !important;
  color: var(--text-main) !important;
  font-size: 1.1rem !important;
  font-family: 'Patrick Hand', cursive !important;
  margin: 5px !important;
  flex-grow: 1 !important;
  padding: 0.5rem !important;
  width: auto !important;
  box-shadow: none !important;
}

.react-tagsinput-tag {
  background-color: var(--color-light-lavender);
  color: var(--text-main);
  border-radius: 12px 10px 14px 9px / 10px 13px 9px 14px;
  border: 1px solid rgba(0,0,0,0.2);
  padding: 4px 12px;
  margin: 5px;
  display: inline-block;
  font-size: 1rem;
}

/* Priority Buttons */
.priority-group {
  display: flex;
  border: 2px solid rgba(0,0,0,0.7);
  border-radius: 10px;
  overflow: hidden;
  box-shadow: var(--shadow-sketch);
}

.priority-btn {
  flex: 1;
  padding: 0.8rem 0.5rem;
  border: none;
  background-color: #fff;
  color: var(--text-light);
  cursor: pointer;
  transition: all 0.2s;
  font-size: 1rem;
  font-family: 'Patrick Hand', cursive;
  font-weight: 400;
}

body[data-theme="dark"] .priority-btn {
  background-color: var(--dark-input-bg);
  color: var(--text-light);
}

.priority-btn:not(:last-child) {
  border-right: 2px solid rgba(0,0,0,0.2);
}

.priority-btn:hover:not(.active) {
  background-color: #f0f0f0;
}

.priority-btn.active {
  color: var(--text-main);
  transform: translateY(2px);
  box-shadow: inset 0 2px 4px rgba(0,0,0,0.1);
}

.priority-btn.low.active {
  background-color: var(--priority-low);
}
.priority-btn.medium.active {
  background-color: var(--priority-medium);
}
.priority-btn.high.active {
  background-color: var(--priority-high);
}

.suggestion-controls {
  display: flex;
  gap: 0.5rem;
  margin-top: -1rem; /* Kéo lên gần hơn với ô mô tả */
}

.suggestion-btn, .suggestion-apply-btn {
  padding: 0.4rem 0.8rem;
  border: 2px solid rgba(0,0,0,0.7);
  border-radius: 8px 6px 10px 7px / 7px 9px 6px 10px;
  cursor: pointer;
  font-family: 'Patrick Hand', cursive;
  font-size: 0.9rem;
  transition: all 0.15s ease;
  box-shadow: var(--shadow-sketch);
}

.suggestion-btn {
  background-color: var(--color-light-lavender);
}

.suggestion-apply-btn {
  background-color: var(--color-pale-yellow);
}

.suggestion-btn:disabled {
  opacity: 0.7;
  cursor: wait;
}

.suggestions-box {
  background-color: #f9f9f9;
  border: 2px dashed rgba(0,0,0,0.2);
  border-radius: 8px;
  padding: 1rem;
  margin-top: 0.5rem;
  white-space: pre-wrap; /* Giữ nguyên định dạng xuống dòng */
  font-family: 'Patrick Hand', cursive;
  font-size: 1rem;
  line-height: 1.6;
  max-height: 200px;
  overflow-y: auto;
}

body[data-theme="dark"] .suggestions-box {
  background-color: rgba(60, 60, 60, 0.8);
  border-color: rgba(255, 255, 255, 0.2);
  color: var(--text-main);
}

body[data-theme="dark"] .suggestion-btn,
body[data-theme="dark"] .suggestion-apply-btn {
  border-color: var(--dark-border-color);
  color: var(--button-text-color);
}
/* --- Markdown Content Styling --- */
.markdown-content {
  /* Kế thừa font chữ và màu sắc từ suggestions-box */
}

.markdown-content h1,
.markdown-content h2,
.markdown-content h3,
.markdown-content h4 {
  margin-top: 1.2rem;
  margin-bottom: 0.8rem;
  color: var(--text-main);
  text-decoration: underline;
  text-decoration-style: wavy;
  text-underline-offset: 4px;
  text-decoration-color: var(--color-mint-green);
}

.markdown-content h1 { font-size: 1.5em; }
.markdown-content h2 { font-size: 1.3em; }
.markdown-content h3 { font-size: 1.2em; }
.markdown-content h4 { font-size: 1.1em; }


.markdown-content p {
  margin-bottom: 0.8rem;
}

.markdown-content ul,
.markdown-content ol {
  padding-left: 2rem;
  margin-bottom: 1rem;
}

.markdown-content li {
  margin-bottom: 0.5rem;
}

.markdown-content strong {
  font-weight: 600; /* Đậm hơn một chút */
  color: var(--text-main);
}

.markdown-content a {
  color: var(--accent-bright-blue);
  text-decoration: underline;
  text-decoration-style: dotted;
  text-underline-offset: 3px;
}

.markdown-content a:hover {
  color: #0056b3;
}

.markdown-content pre {
  background-color: #e9e9e9;
  padding: 0.8rem;
  border-radius: 6px;
  white-space: pre-wrap;
  word-wrap: break-word;
}

.markdown-content code {
  font-family: 'Courier New', Courier, monospace;
  background-color: #e9e9e9;
  padding: 2px 5px;
  border-radius: 4px;
  font-size: 0.9em;
}

body[data-theme="dark"] .markdown-content pre,
body[data-theme="dark"] .markdown-content code {
  background-color: rgba(255, 255, 255, 0.1);
  color: var(--text-main);
}
/* --- Description Preview Styling --- */
.description-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.5rem; /* Giống với .form-group gap */
}

.description-header label {
  margin: 0; /* Ghi đè margin mặc định nếu có */
}

.preview-toggle-btn {
  background: none;
  border: none;
  cursor: pointer;
  font-size: 1.5rem;
  padding: 0.2rem;
  line-height: 1;
  border-radius: 50%;
  transition: background-color 0.2s;
}

.preview-toggle-btn:hover {
  background-color: rgba(0,0,0,0.08);
}

.description-preview {
  width: 100%;
  min-height: 120px; /* Giống với textarea */
  padding: 0.8rem 1.2rem;
  border: 2px solid rgba(0,0,0,0.7);
  border-radius: 8px 6px 10px 7px / 7px 9px 6px 10px;
  background-color: #fdfdfd; /* Hơi khác so với textarea để phân biệt */
  box-shadow: var(--shadow-sketch);
  line-height: 1.6;
  max-height: 300px; /* Thêm giới hạn chiều cao và cuộn */
  overflow-y: auto;
}

body[data-theme="dark"] .description-preview {
  background-color: var(--dark-card-bg);
  border-color: var(--dark-border-color);
  color: var(--text-main);
}

.description-preview em {
  color: var(--text-light);
}
@media (max-width: 768px) {
  .task-form {
    gap: 1rem;
  }

  .form-row {
    grid-template-columns: 1fr;
    gap: 1rem;
  }

  .task-form h2 {
    font-size: 1.7rem;
    margin-bottom: 0.8rem;
    text-underline-offset: 4px; /* Giảm khoảng cách gạch chân */
  }
  
  .form-group {
    gap: 0.4rem; /* Giảm khoảng cách giữa label và input */
  }
  
  .form-group label {
    font-size: 1.1rem;
  }

  .task-form input,
  .task-form textarea {
    padding: 0.7rem 1rem;
    font-size: 1rem;
  }
  
  .task-form textarea {
    min-height: 100px; /* Giảm chiều cao tối thiểu */
  }

  .form-actions {
    flex-direction: column;
    gap: 0.8rem;
  }

  .form-actions button {
    width: 100%;
    padding: 0.6rem 1rem;
    font-size: 1rem;
  }
  
  /* Điều chỉnh các nút gợi ý */
  .suggestion-controls {
    flex-wrap: wrap;
    justify-content: center;
  }
  
  .suggestion-btn, .suggestion-apply-btn {
    padding: 0.3rem 0.6rem;
    font-size: 0.85rem;
  }
  
  /* Điều chỉnh hộp gợi ý */
  .suggestions-box {
    max-height: 150px; /* Giảm chiều cao tối đa */
    font-size: 0.95rem;
  }
}

@media (max-width: 480px) {
  .task-form h2 {
    font-size: 1.5rem;
    margin-bottom: 0.7rem;
  }
  
  .form-group label {
    font-size: 1rem;
  }
  
  .task-form input,
  .task-form textarea {
    padding: 0.6rem 0.8rem;
    font-size: 0.95rem;
  }
  
  /* Điều chỉnh nhóm lựa chọn ưu tiên */
  .priority-btn {
    font-size: 0.9rem;
    padding: 0.7rem 0.4rem;
  }
}

/* ========================================================================== */
/* ===================         TaskModal.css        =================== */
/* ========================================================================== */

/* TaskModal.css - Hand-drawn sketch style */
.ReactModal__Overlay {
  background-color: rgba(253, 253, 246, 0.7) !important; /* Paper color overlay */
  backdrop-filter: blur(3px) saturate(120%);
  opacity: 0;
  transition: opacity 250ms ease-in-out;
  z-index: 1000;
}

.ReactModal__Overlay--after-open {
  opacity: 1;
}

.ReactModal__Overlay--before-close {
  opacity: 0;
}

@keyframes sketch-pop-in {
  0% {
    transform: translate(-50%, -50%) scale(0.8) rotate(-5deg);
    opacity: 0;
  }
  70% {
    transform: translate(-50%, -50%) scale(1.05) rotate(3deg);
    opacity: 1;
  }
  100% {
    transform: translate(-50%, -50%) scale(1) rotate(0deg);
    opacity: 1;
  }
}

.ReactModal__Content {
  top: 50% !important;
  left: 50% !important;
  right: auto !important;
  bottom: auto !important;
  margin-right: -50% !important;
  transform: translate(-50%, -50%) !important;
  width: 90% !important;
  max-width: 550px !important;
  max-height: 90vh !important;
  overflow-y: auto !important;
  border: 3px solid rgba(0, 0, 0, 0.8) !important;
  border-radius: 12px 8px 15px 10px / 8px 15px 10px 12px !important;
  box-shadow: 6px 6px 0px rgba(0, 0, 0, 0.15) !important;
  padding: 2rem !important;
  background: #fff !important; /* White paper */
  color: var(--text-main) !important;
  opacity: 0;
  animation-fill-mode: forwards;
  /* Hide scrollbar for Chrome, Safari and Opera */
  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;  /* Firefox */
}

.ReactModal__Content::-webkit-scrollbar {
  display: none;
}

.ReactModal__Content--after-open {
  animation-name: sketch-pop-in;
  animation-duration: 0.4s;
  animation-timing-function: ease-out;
}

.ReactModal__Content--before-close {
  opacity: 0;
  transform: translate(-50%, -50%) scale(0.9) !important;
  transition: opacity 200ms ease-in-out, transform 200ms ease-in-out;
}